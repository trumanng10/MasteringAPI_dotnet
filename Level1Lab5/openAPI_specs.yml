openapi: 3.0.3
info:
  title: Todo Items API
  description: API for managing Todo Items
  version: 1.0.0
servers:
  - url: https://api.yourdomain.com/v1
    description: Production server
  - url: http://localhost:5000
    description: Development server
paths:
  /todoitems:
    get:
      summary: Retrieve a list of todo items
      operationId: getTodoItems
      tags:
        - TodoItems
      responses:
        '200':
          description: A list of todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoItem'
        '500':
          description: Server error
    post:
      summary: Create a new todo item
      operationId: createTodoItem
      tags:
        - TodoItems
      requestBody:
        description: Todo item to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodoItem'
      responses:
        '201':
          description: Todo item created successfully
          headers:
            Location:
              description: URL of the created todo item
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /todoitems/{id}:
    get:
      summary: Retrieve a specific todo item by ID
      operationId: getTodoItemById
      tags:
        - TodoItems
      parameters:
        - name: id
          in: path
          description: ID of the todo item to retrieve
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: Todo item found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        '404':
          description: Todo item not found
        '500':
          description: Server error
    put:
      summary: Update an existing todo item
      operationId: updateTodoItem
      tags:
        - TodoItems
      parameters:
        - name: id
          in: path
          description: ID of the todo item to update
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        description: Updated todo item data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoItem'
      responses:
        '204':
          description: Todo item updated successfully
        '400':
          description: Invalid input
        '404':
          description: Todo item not found
        '500':
          description: Server error
    delete:
      summary: Delete a todo item
      operationId: deleteTodoItem
      tags:
        - TodoItems
      parameters:
        - name: id
          in: path
          description: ID of the todo item to delete
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '204':
          description: Todo item deleted successfully
        '404':
          description: Todo item not found
        '500':
          description: Server error
components:
  schemas:
    TodoItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: "Buy groceries"
        isCompleted:
          type: boolean
          example: false
      required:
        - id
        - name
        - isCompleted
    NewTodoItem:
      type: object
      properties:
        name:
          type: string
          example: "Buy groceries"
        isCompleted:
          type: boolean
          example: false
      required:
        - name
        - isCompleted
    UpdateTodoItem:
      type: object
      properties:
        name:
          type: string
          example: "Buy groceries and cook dinner"
        isCompleted:
          type: boolean
          example: true
      required:
        - name
        - isCompleted
  parameters:
    TodoItemId:
      name: id
      in: path
      description: ID of the todo item
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
  responses:
    NotFound:
      description: The specified resource was not found
    IllegalInput:
      description: Illegal input for operation
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  examples:
    TodoItemExample:
      summary: A sample todo item
      value:
        id: 1
        name: "Buy groceries"
        isCompleted: false
  requestBodies:
    NewTodoItem:
      description: New todo item to add
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewTodoItem'
    UpdateTodoItem:
      description: Updated todo item data
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTodoItem'
  security:
    - ApiKeyAuth: []
tags:
  - name: TodoItems
    description: Operations related to todo items
